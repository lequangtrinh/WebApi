@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = null;
}
<div class="container-fluid py-3 px-0">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <h6 data-languagestatic="customer_group_list_header" class="mb-0">Danh Sách Nhóm Khách Hàng</h6>
                                <p data-languagestatic="customer_group_list_header_sub" class="text-sm mb-0">Không đặt trùng tên nhóm khách hàng</p>
                            </div>
                        </div>
                        <div class="ms-auto my-auto mt-1">
                            <span id="status1" countto="123">123</span>
                            <button data-languagestatic="create_new" id="btnNewTypeAccount" class="btn bg-gradient-primary btn-sm mt-1" onclick="return CustomerGroupAddNew()">Thêm Mới</button>
                            <!-- #endregion -->
                        </div>
                    </div>
                </div>
                <div class="card-body pt-2">
                    <div class="m-0 my-3 mobile-responsive">
                        <table id="dtContentEditUser" class="table vt-table mb-0">
                            <thead class="hiddenCollapse">
                                <tr role="row">
                                    <th class="d-none">ID</th>
                                    <th data-languagestatic="no">#</th>
                                    <th data-languagestatic="">Image</th>
                                    <th data-languagestatic="name">Tên</th>
                                    <th data-languagestatic="Role">Role</th>
                                    <th data-languagestatic="Phone">SDT/DV</th>
                                    <th data-languagestatic="Address">Address</th>
                                    <th data-languagestatic="Email">Email</th>
                                    <th data-languagestatic="delete">Xóa</th>
                                </tr>
                            </thead>
                            <tbody data-languagedyn="grid" id="dtContentEditUserBody">
                            </tbody>
                        </table>
                    </div>
                    <nav class="dataTable-pagination d-flex justify-content-end">
                        <ul class="pagination" id="PageUser">
                            
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
     $(document).ready(function () { 
         LoadDataUser();
          if (document.getElementById('status1')) {
          const countUp = new CountUp('status1', document.getElementById("status1").getAttribute("countTo"));
          if (!countUp.error) {
            countUp.start();
          } else {
            console.error(countUp.error);
          }
        }
     });
    function LoadDataUser(){
         AjaxLoad(url = "/api/Login/LoadUser"
            , data = {
            }, async = true, error = null
            , success = function (result) {
                if (result != "") {
                   UserRenderList(JSON.parse(result),"dtContentEditUserBody")
                }
            });
    }
    function UserRenderList(data, id) {
        let buttons = [];
        let myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            RenderPageUser(data);
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td class="d-none">' + item.UserID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td>'
                        + '<div class="icon icon-shape icon-sm me-2 text-center" >'
                        + '<img class="avatar mt-2" src="./Assets/img/'+item.Image+'" alt="label-image">'
                        + '</div>'
                        +'</td>'
                        + '<td><a href="#" class="text-decoration-underline fw-bold buttonEditClass">' + item.UserName + '</a></td>'
                        + '<td>' + item.Role + '</td>'
                        + '<td>' + item.PhoneNumber + '</td>'
                        + '<td data-name="address">' + item.Address + '</td>'
                        + '<td>' + item.Email + '</td>'
                        +'<td data-name="is_show_app">'
                        + ((1 === 1)
                        ? Render_Button_Grid(['<button class="buttonGrid" value="'
                        + item.UserID
                        + '"><i class="fa fa-trash"></i></button>'])
                        : '')
                    + '</td>'
                    stringContent = stringContent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                }
            }

            document.getElementById(id).innerHTML = stringContent;
        }
    }

    function RenderPageUser(data){
        let id="PageUser";
        let page=ResCountPage(data);
        RenderPageData(id,3);
        let ele=document.querySelectorAll('.page-item');
         RemoveClassActive(ele,3);
    }

    function RemoveClassActive(ele,page){
          ele.forEach(node=>{ 
             node.addEventListener("click", e =>{
                removeAddActive(ele,e);
                 if(e.target.innerText !=1){
                     $("#PageUserPrev").removeClass("disabled");
                     $("#PageUserNext").removeClass("disabled");
                     if(e.target.innerText == page){
                      $("#PageUserNext").addClass("disabled");
                   }
               }
                else{
                    $("#PageUserPrev").addClass("disabled");
                };
                LoadDataUser();
             });
         });
    }
    function removeAddActive(element,e){
       
        element.forEach((node) => {
            if(node.classList.contains('active')){
               node.classList.remove('active');
               e.currentTarget.classList.add("active");
            }
            else{
                e.currentTarget.classList.add("active");
            }
        });
    };

    // document.getElementById(id+"Prev").addEventListener("click", function() { 
    //         RemoveClassActive(ele,3,id);
    //    });
    //document.getElementById(id+"Next").addEventListener("click", function() {
    //    RemoveClassActive(ele,3,id);
    //});
</script>